<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="4" hostname="LAPTOP-N6849G24" failures="0" tests="5" name="Pixel_5" time="0.681" errors="0" timestamp="2024-05-15T13:13:43 IST">
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="0.469">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 404. Message: The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource 
Host info: host: &amp;apos;LAPTOP-N6849G24&amp;apos;, ip: &amp;apos;192.168.1.144&amp;apos;
Build info: version: &amp;apos;4.20.0&amp;apos;, revision: &amp;apos;866c76ca80&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.7&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{platformName=ANDROID, appium:chromeDriverPort=11000, appium:systemPort=10000, appium:avd=Pixel_7, appium:appActivity=com.swaglabsmobileapp.SplashActivity, appium:deviceName=Pixel_7, appium:app=C:\Users\excel\eclipse-workspace\TDDFramework\src\test\resources\app\Android.SauceLabs.Mobile.Sample.app.2.7.1.apk, appium:appPackage=com.swaglabsmobileapp, appium:avdLaunchTimeout=120000, appium:udid=emulator-5554, appium:automationName=UiAutomator2}], desiredCapabilities=Capabilities {app: C:\Users\excel\eclipse-work..., appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, automationName: UiAutomator2, avd: Pixel_7, avdLaunchTimeout: 120000, chromeDriverPort: 11000, deviceName: Pixel_7, platformName: ANDROID, systemPort: 10000, udid: emulator-5554}}]
Capabilities {app: C:\Users\excel\eclipse-work..., appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, automationName: UiAutomator2, avd: Pixel_7, avdLaunchTimeout: 120000, chromeDriverPort: 11000, deviceName: Pixel_7, platformName: ANDROID, systemPort: 10000, udid: emulator-5554}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 404. Message: The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource 
Host info: host: 'LAPTOP-N6849G24', ip: '192.168.1.144'
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{platformName=ANDROID, appium:chromeDriverPort=11000, appium:systemPort=10000, appium:avd=Pixel_7, appium:appActivity=com.swaglabsmobileapp.SplashActivity, appium:deviceName=Pixel_7, appium:app=C:\Users\excel\eclipse-workspace\TDDFramework\src\test\resources\app\Android.SauceLabs.Mobile.Sample.app.2.7.1.apk, appium:appPackage=com.swaglabsmobileapp, appium:avdLaunchTimeout=120000, appium:udid=emulator-5554, appium:automationName=UiAutomator2}], desiredCapabilities=Capabilities {app: C:\Users\excel\eclipse-work..., appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, automationName: UiAutomator2, avd: Pixel_7, avdLaunchTimeout: 120000, chromeDriverPort: 11000, deviceName: Pixel_7, platformName: ANDROID, systemPort: 10000, udid: emulator-5554}}]
Capabilities {app: C:\Users\excel\eclipse-work..., appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, automationName: UiAutomator2, avd: Pixel_7, avdLaunchTimeout: 120000, chromeDriverPort: 11000, deviceName: Pixel_7, platformName: ANDROID, systemPort: 10000, udid: emulator-5554}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:116)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:96)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:268)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:161)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:90)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:102)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at com.qa.BaseTest.beforeTest(BaseTest.java:270)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- invalidPassword -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidUserName" time="0.0">
    <skipped/>
  </testcase> <!-- invalidUserName -->
  <testcase classname="com.qa.tests.LoginTests" name="successfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- successfulLogin -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductDetailsPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductDetailsPage -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductsPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductsPage -->
  <testcase classname="com.qa.BaseTest" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.qa.BaseTest" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
</testsuite> <!-- Pixel_5 -->
